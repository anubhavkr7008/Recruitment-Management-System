@model Test_Identity.Models.InterviewModels

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>RoundInterviewModels</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Round, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Round, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Round, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CandidateId, "CandidateId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CandidateId, ViewBag.cand as SelectList, "Candidate Name", new { @class = "form-control", id = "normalDropDown" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.InterviewerId, "InterviewerId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.InterviewerId, ViewBag.interviewer as SelectList, "Interviewer Name", new { @class = "form-control", id = "normalDropDown1" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobId, "JobId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.JobId, ViewBag.job as SelectList, "Job Description", new { @class = "form-control", id = "normalDropDown2" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ModeOfInterview, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ModeOfInterview, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ModeOfInterview, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">

        @Html.LabelFor(model => model.DateTime, htmlAttributes: new { @class = "control-label col-md-2 " })
        <div class="col-md-10">
            <input type="datetime-local" id="DateTime" name="DateTime" class="form-control">
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>

    <br />
    <p style="color:red">

        @ViewBag.ErrorMessage
    </p>


</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section scripts{
    <script>
        $(function () {
            $("#normalDropDown").chosen({
                //disable_search_threshold: 5
                width: "30%"

            });
        });
        $(function () {
            $("#normalDropDown1").chosen({
                //disable_search_threshold: 5
                width: "30%"

            });
        });
        $(function () {
            $("#normalDropDown2").chosen({
                //disable_search_threshold: 5
                width: "30%"

            });
        });
            //$(function () {
            //    $(function () {
            //        $("#normalDropDown").chosen({
            //            width: "100%"
            //        })
            //    })
            //})
    </script>
}
