@model Test_Identity.Models.InterviewerModel
@{
    ViewBag.Title = "Create";
}

<h2>AddOrEdit</h2>

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>InterviewerModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Timing, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Timing, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Timing, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.SelectedSkillID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SelectedSkillID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SelectedSkillID, "", new { @class = "text-danger" })
            </div>
        </div>*@


    <div class="from-horizontal">
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            <lable>Select Skills</lable>
            @*Normal DropDown*@
            @* @Html.DropDownListFor(model => model.SelectedSkillID, new SelectList(Model.SkillCollection, "ID", "Skills"), new { id = "normalDropDown" })*@

            @*MuliSelect Dropdown*@
            @Html.ListBoxFor(Model => Model.SelectedIDArray, new MultiSelectList(Model.SkillCollection, "ID", "Skills"), new { id = "multiSelectDropDown", multiple = "multiple" })
        </div>
    </div>

    @*<div class="from-horizontal">
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                <lable>Select Skills</lable>
                Normal DropDown
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section scripts{
    <script>
        $(function () {
            //normal dropdown
            //$("#normalDropDown").chosen();
       
            $("#multiSelectDropDown").chosen({
                width: "100%"
            });
            
        });
    </script>
}